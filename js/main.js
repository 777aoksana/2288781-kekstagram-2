/* Техническое задание:

1. Напишите необходимые функции для создания массива из 25 сгенерированных объектов (+).

2. Каждый объект массива — описание фотографии, опубликованной пользователем.

3. Структура каждого объекта должна быть следующей:
  + id - число — идентификатор опубликованной фотографии. Это число от 1 до 25. Идентификаторы не должны повторяться.
  - url - строка — адрес картинки вида photos/{{i}}.jpg, где {{i}} — это число от 1 до 25. Адреса картинок не должны повторяться.
  + description - строка — описание фотографии. Описание придумайте самостоятельно.
  + likes - число — количество лайков, поставленных фотографии. Случайное число от 15 до 200.
  - comments - массив объектов — список комментариев, оставленных другими пользователями к этой фотографии. Количество комментариев к каждой фотографии — случайное число от 0 до 30. Все комментарии генерируются случайным образом.

        Пример описания объекта с комментарием:
          {
            id: 135,
            avatar: 'img/avatar-6.svg',
            message: 'В целом всё неплохо. Но не всё.',
            name: 'Артём',
          }
          - У каждого комментария есть идентификатор — id — любое число. Идентификаторы не должны повторяться.
          - Поле avatar — это строка, значение которой формируется по правилу img/avatar-{{случайное число от 1 до 6}}.svg. Аватарки подготовлены в директории img.
          + Для формирования текста комментария — message — вам необходимо взять одно или два случайных предложения из представленных ниже:
              Всё отлично!
              В целом всё неплохо. Но не всё.
              Когда вы делаете фотографию, хорошо бы убирать палец из кадра. В конце концов это просто непрофессионально.
              Моя бабушка случайно чихнула с фотоаппаратом в руках и у неё получилась фотография лучше.
              Я поскользнулся на банановой кожуре и уронил фотоаппарат на кота и у меня получилась фотография лучше.
              Лица у людей на фотке перекошены, как будто их избивают. Как можно было поймать такой неудачный момент?!
          + Имена авторов также должны быть случайными. Набор имён для комментаторов составьте сами. Подставляйте случайное имя в поле name.
*/


// КОНСТАНТЫ
const PHOTOS_NUMBER = 25;

const MIN_COMMENTS = 0;
const MAX_COMMENTS = 30;

const MIN_LIKES = 15;
const MAX_LIKES = 200;

// const MAX_MESSAGES = 2;


// МАССИВЫ
const NAMES = [
  'Александр',
  'Вера',
  'Надежда',
  'Любовь',
  'Роман',
  'Светлана',
  'Максим',
  'Оксана',
  'Игорь',
  'Сергей',
  'Дмитрий',
  'Николай',
  'Константин',
  'Татьяна',
  'Галина',
  'Ольга',
  'Виктория',
  'Павел',
  'Юлия',
  'Валентина',
  'Анастасия',
  'Алексей',
  'Антон',
  'Владимир',
  'Елена'
];

const COMMENTS = [
  'Всё отлично!',
  'В целом всё неплохо. Но не всё.',
  'Когда вы делаете фотографию, хорошо бы убирать палец из кадра. В конце концов это просто непрофессионально.',
  'Моя бабушка случайно чихнула с фотоаппаратом в руках и у неё получилась фотография лучше.',
  'Я поскользнулся на банановой кожуре и уронил фотоаппарат на кота и у меня получилась фотография лучше.',
  'Лица у людей на фотке перекошены, как будто их избивают. Как можно было поймать такой неудачный момент?!'
];

const PHOTOS_DESCRIPTIONS = [
  'Море — это не просто бескрайние просторы воды, это целый мир эмоций, отдыха и вдохновения',
  'Тропа к морю',
  'Море, море, мир бездонный, Пенный шелест волн прибрежных, Над тобой встают, как зори, Над тобой встают, как зори, Нашей юности надежды.',
  'Женское сердце подобно морю: оно глубоко, бурно',
  'Люди обычно ели грубые овощи, и даже чашка белого риса была редкой радостью',
  'Цвет автомобиля может быть любым, при условии, что он чёрный',
  'Когда дошла очередь до блюда с клубникой, тетенька расфилософствовалась',
  'Спасибо, родина. Всех ягод лучше — красная смородина…',
  'Самолет летит над синим морем к красивому лазурному коралловому берегу среди белых облаков',
  'Обувь меняет язык вашего тела. Она возвышает вас как физически, так и эмоционально',
  'Жизнь человека напоминает отпечатки следов на песчаном морском берегу, где набегающие волны — годы, и чем их больше — тем следы становятся всё незаметней',
  'Автомобиль — не роскошь, а средство передвижения',
  'Скажи мне, что ты ешь, и я скажу тебе, кто ты',
  'Кошки — существа загадочные, как легенды и сказания',
  'Тепла Вашим ножкам',
  'Лететь выше облаков',
  'Отдельный скрипач сам управляет собой, оркестр нуждается в дирижёре',
  'Что самое главное в красной машине? Феррари!',
  'Кто первый встал, того и тапки',
  'Будь щедрым, как пальма. А если не можешь, то будь Стволом кипариса, прямым и простым — благородным',
  'Салат — это то неповторимое блюдо, в котором с особой полнотой проявляются всё искусное умение хозяйки и её фантазия',
  'Каждый закат приносит обещание нового рассвета',
  'Как морской краб всегда плывёт против течения, так и остроумие всегда против мудрости',
  'Впрочем, наша героиня и не подозревала, сколь красочное шоу она невольно затеяла',
  'У него два рога',
];


// ФУНКЦИИ
// Напишите необходимые функции для создания массива из 25 сгенерированных объектов

/**
 * Генерация случайных чисел
 * @param {*} min - ,
 * @param {*} max - ,
 * @returns,
 */

function getRandomInteger(min, max) {
  // случайное число от min до (max + 1)
  const lower = Math.ceil(Math.min(Math.abs(min), Math.abs(max)));
  const upper = Math.floor(Math.max(Math.abs(min), Math.abs(max)));
  const result = Math.random() * (upper - lower + 1) + lower;
  return Math.floor(result);
}


/**
 * Генерация id (идентификаторы не должны повторяться)
 * @returns,
 */

const getIdGenerator = () => {
  let id = 0;

  return function () {
    id += 1;
    return id;
  };
};


/**
 * Рандом комментария
 * @returns
 */

function getComment(){
  return {
    id: crypto.randomUUID(),
    avatar: `img/avatar-${getRandomInteger(0, 6)}.svg`,
    message: Array.from({length: getRandomInteger(1, 2)}, ()=> COMMENTS[getRandomInteger(0, COMMENTS.length - 1)]).join(' '),
    name: NAMES[getRandomInteger(0, NAMES.length - 1)],
  };
}

// Рандом описания фоток
function getObject(lastId){
  return {
    id: lastId,
    url: `photos/${lastId}.jpg`,
    description: PHOTOS_DESCRIPTIONS[getRandomInteger(0, PHOTOS_DESCRIPTIONS.length - 1)],
    like: getRandomInteger(MIN_LIKES, MAX_LIKES),
    comment: Array.from({length: getRandomInteger(MIN_COMMENTS, MAX_COMMENTS)}, ()=> getComment())
  };
}

// Рандом id фото
function getPhoto () {
  const newId = getIdGenerator();
  return Array.from({ length: PHOTOS_NUMBER }, () => getObject(newId()));
}

getPhoto();
